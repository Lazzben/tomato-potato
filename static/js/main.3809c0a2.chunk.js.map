{"version":3,"sources":["config/history.ts","config/axios.ts","iconfont/iconfont.js","redux/reducers/actions.ts","redux/actiontypes.ts","component/todo/todoinput.tsx","component/todo/todoitem.tsx","component/todo/todo.tsx","component/tomato/countdown.tsx","component/tomato/tomatoinput.tsx","component/tomato/tomatolist.tsx","component/tomato/tomato.tsx","component/statistics/polygon.tsx","component/statistics/statistics.tsx","component/history/history.tsx","component/index/index.tsx","component/signup/signup.tsx","component/login/login.tsx","serviceWorker.ts","redux/reducers/index.ts","redux/reducers/todos.ts","redux/reducers/tomatoes.ts","redux/store.ts","index.tsx","App.tsx"],"names":["publicUrl","console","log","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","Promise","reject","response","setItem","status","push","IconFont","createFromIconfontCN","scriptUrl","initTodos","payload","type","Todoinput","props","onKeyUp","e","description","state","keyCode","postTodo","a","post","then","res","addTodo","data","resource","setState","catch","Error","this","suffix","EnterOutlined","onClick","placeholder","onChange","target","value","React","Component","mapDispatchToProps","connect","ownState","Todoitem","updateTodo","id","params","completed","completed_at","Date","put","err","onChecked","checked","onEditing","editTodo","onDeleted","onUpdateDescription","editText","onKeyupUpdateDescription","editing","editingElement","className","onBlur","DeleteOutlined","textElement","onDoubleClick","todoitemclass","classnames","todoitem","Todo","unCompletedTodos","map","todo","key","completedTodos","todos","filter","t","deleted","unDeletedTodos","ownProps","Countdown","finish","timeId","clearInterval","timer","setInterval","min","Math","floor","sec","time","width","duration","style","Tomatoinput","addTomato","updateTomato","unfishedTomato","abortTomato","aborted","addDescription","countDownFinish","forceUpdate","confirm","title","onConfirm","okText","cancelText","CloseCircleOutlined","position","right","top","background","showStartBtn","showInputTomato","onPressEnter","showCountDown","startedAt","now","showWhich","html","undefined","parse","started_at","getTime","Tomatolist","tomatoItem","tomato","format","ended_at","tomatoesList","Object","keys","finishedTomatoes","date","dailyTomatoes","length","ts","Tomato","upDateTomato","unfinishedTomato","tomatoes","finishedtomatoes","_","groupBy","Polygon","points","svgWidth","dates","sort","b","firstDay","lastDay","range","finishedCount","pointslist","d","x","y","join","height","fill","stroke","strokeWidth","Statistics","getTodayTomatoesCount","tomatoesdates","percent","strokeColor","finishedTodos","dailyTodos","updated_at","History","todoList","dailyFinishedTodos","menu","Item","SettingOutlined","LoginOutlined","Index","getMe","get","user","getTodo","resources","assign","getTomatoes","initTomatoes","overlay","preventDefault","account","DownOutlined","Signup","inputOnChange","item","newState","submit","password","password_confirmation","prefix","UserOutlined","Password","to","Login","Boolean","window","location","hostname","match","combineReducers","action","store","createStore","rootreducer","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3809c0a2.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nconst ENV = process.env.NODE_ENV\r\nlet publicUrl = '/'\r\n\r\nif (ENV === 'development') {\r\n  publicUrl = '/'\r\n  console.log('dev')\r\n} else if (ENV === 'production') {\r\n  publicUrl = '/tomato-potato'\r\n  console.log('pro')\r\n}\r\n\r\nconst history = createBrowserHistory({ basename: publicUrl });\r\nexport default history","import axios from 'axios';\r\nimport history from './history'\r\n\r\nconst appID = \"aXuQpqqnX6F5ub7hD6qZXj7n\"\r\nconst appSecret = \"VCDCeZAiQGxjCE37FVWHgr93\"\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  const xToken = localStorage.getItem('x-token')\r\n  if (xToken) {\r\n    config.headers['Authorization'] = `Bearer ${xToken}`\r\n  }\r\n  return config;\r\n}, function (error) {\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n  // Do something with response data\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token'])\r\n  }\r\n  return response;\r\n}, function (error) {\r\n  // Do something with response error\r\n  if (error.response.status === 401) {\r\n    history.push('/login')\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default instance","import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_1690552_ux6k7ymzsbe.js',\r\n});\r\n\r\nexport default IconFont","import { ADD_TODO, UPDATE_TODO, INIT_TODOS, EDIT_TODO, ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from '../actiontypes'\r\n\r\nexport const addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const initTodos = (payload: []) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const initTomatoes = (payload: []) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO'\r\nexport const INIT_TODOS = 'INIT_TODOS'\r\nexport const UPDATE_TODO = \"UPDATE_TODO\"\r\nexport const EDIT_TODO = \"EDIT_TODO\"\r\nexport const ADD_TOMATO = \"ADD_TOMATO\"\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES'\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO'","import React from 'react'\r\nimport { Input } from 'antd'\r\nimport { EnterOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../../redux/reducers/actions'\r\nimport axios from '../../config/axios'\r\n\r\ninterface ITodoinputState {\r\n  description: string,\r\n}\r\n\r\ninterface ITodeInputProps {\r\n  addTodo: (params: any) => {}\r\n}\r\n\r\n\r\nclass Todoinput extends React.Component<any, ITodoinputState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  onKeyUp = (e: any) => {\r\n    const { description } = this.state\r\n    if (e.keyCode === 13 && description !== '') {\r\n      this.postTodo()\r\n    }\r\n  }\r\n\r\n  postTodo = async () => {\r\n    if (this.state.description === '') return\r\n    await axios.post('/todos', { description: this.state.description })\r\n      .then(res => {\r\n        this.props.addTodo(res.data.resource)\r\n        this.setState({ description: '' })\r\n      })\r\n      .catch(e => { throw new Error(e) })\r\n  }\r\n\r\n  render() {\r\n    const { description } = this.state\r\n    const suffix = this.state.description ? <EnterOutlined onClick={this.postTodo} /> : <span />;\r\n    return (\r\n      <Input\r\n        placeholder=\"输入想要开始的任务\"\r\n        suffix={suffix}\r\n        onChange={e => { this.setState({ 'description': e.target.value }) }}\r\n        onKeyUp={this.onKeyUp}\r\n        value={description}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownState: any) => ({\r\n  ...ownState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todoinput)\r\n","import React from 'react'\r\nimport { Checkbox } from 'antd'\r\nimport classnames from 'classnames'\r\nimport { DeleteOutlined, EnterOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\nimport { updateTodo, editTodo } from '../../redux/reducers/actions'\r\nimport axios from '../../config/axios'\r\nimport './todoitem.scss'\r\n\r\ninterface ITodoItemProps {\r\n  id: number,\r\n  description: string,\r\n  editing: boolean,\r\n  completed: boolean,\r\n  updateTodo: (params: any) => void,\r\n  editTodo: (id: number) => void\r\n}\r\n\r\ninterface ITodoItemState {\r\n  editText: string,\r\n}\r\n\r\nclass Todoitem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      editText: this.props.description\r\n    }\r\n  }\r\n\r\n  updateTodo = async (id: number, params: any) => {\r\n    if (params.completed) {\r\n      params.completed_at = new Date()\r\n    }\r\n    await axios.put(`todos/${id}`, params)\r\n      .then(res => { this.props.updateTodo(res.data.resource) })\r\n      .catch(err => { throw new Error(err) })\r\n  }\r\n\r\n\r\n  onChecked = (e: any) => {\r\n    this.updateTodo(this.props.id, { 'completed': e.target.checked })\r\n  }\r\n\r\n  onEditing = () => {\r\n    this.props.editTodo(this.props.id)\r\n  }\r\n\r\n  onDeleted = () => {\r\n    this.updateTodo(this.props.id, { 'deleted': true })\r\n  }\r\n\r\n  onUpdateDescription = () => {\r\n    if (this.state.editText !== '' && this.props.description !== this.state.editText)\r\n      this.updateTodo(this.props.id, { 'description': this.state.editText })\r\n  }\r\n\r\n\r\n  onKeyupUpdateDescription = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      this.onUpdateDescription()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { editText } = this.state\r\n    const { description, editing } = this.props\r\n\r\n    const editingElement = (\r\n      <div className=\"editing\">\r\n        <input\r\n          type=\"text\"\r\n          value={editText}\r\n          onChange={e => this.setState({ editText: e.target.value })}\r\n          onKeyUp={e => { this.onKeyupUpdateDescription(e) }}\r\n          onBlur={this.onUpdateDescription}\r\n        />\r\n        <div className=\"options\">\r\n          <EnterOutlined className=\"item-icon\" onClick={this.onUpdateDescription} />\r\n          <DeleteOutlined className=\"item-icon\" onClick={this.onDeleted} />\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n\r\n    const textElement = (\r\n      <span className='text' onDoubleClick={this.onEditing}>{description}</span>\r\n    )\r\n\r\n    const todoitemclass = classnames({\r\n      todoitem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    })\r\n\r\n    return (\r\n      <div className={todoitemclass}>\r\n        <Checkbox onChange={this.onChecked} checked={this.props.completed} />\r\n        {editing ? editingElement : textElement}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownState: any) => ({\r\n  ...ownState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo,\r\n  editTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todoitem)\r\n","import React from 'react'\r\nimport Todoinput from './todoinput'\r\nimport Todoitem from './todoitem'\r\nimport { connect } from 'react-redux'\r\nimport { initTodos } from '../../redux/reducers/actions'\r\nimport './todo.scss'\r\n\r\ninterface ITodoProps {\r\n  todos: any[]\r\n}\r\n\r\nclass Todo extends React.Component<ITodoProps> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter((t: any) => !t.deleted)\r\n  }\r\n\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter((t: any) => !t.completed)\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.unDeletedTodos.filter((t: any) => t.completed)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='todos'>\r\n        <Todoinput />\r\n        <div className=\"todolist\">\r\n          {\r\n            this.unCompletedTodos.map((todo: any) => {\r\n              return <Todoitem key={todo.id} {...todo} />\r\n            })\r\n          }\r\n          {\r\n            this.completedTodos.map((todo: any) => {\r\n              return <Todoitem key={todo.id} {...todo} />\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  initTodos\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo)","import React from 'react'\r\nimport './countdown.scss'\r\n\r\ninterface ICountdownProps {\r\n  timer: number,\r\n  finish: () => void,\r\n  duration: number\r\n}\r\n\r\ninterface ICountdownState {\r\n  timer: number\r\n}\r\n\r\nclass Countdown extends React.Component<ICountdownProps, ICountdownState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      timer: this.props.timer\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeId: NodeJS.Timeout\r\n    timeId = setInterval(() => {\r\n      this.setState({ timer: this.state.timer - 1000 })\r\n      this.state.timer < 100 && this.finish(timeId)\r\n    }, 1000)\r\n  }\r\n\r\n  finish = (timeId: NodeJS.Timeout) => {\r\n    this.props.finish()\r\n    clearInterval(timeId)\r\n  }\r\n\r\n  render() {\r\n    const min = Math.floor(this.state.timer / 1000 / 60)\r\n    const sec = Math.floor(this.state.timer / 1000 % 60)\r\n    const time = `${min >= 10 ? min : '0' + min}:${sec >= 10 ? sec : '0' + sec}`\r\n    const width = (1 - this.state.timer / this.props.duration) * 100 + '%'\r\n    return (\r\n      <div id=\"countdown\">\r\n        <span className=\"time\">{time}</span>\r\n        <div className=\"progress\" style={{ width: `${width}` }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Countdown","import React from 'react'\r\nimport { Button, Input, Popconfirm } from 'antd'\r\nimport Countdown from './countdown'\r\nimport axios from '../../config/axios'\r\nimport './tomatoinput.scss'\r\nimport { CloseCircleOutlined } from '@ant-design/icons'\r\n\r\ninterface ITomatoinputProps {\r\n  addTomato: (params: any) => any,\r\n  updateTomato: (layload: any) => void,\r\n  unfishedTomato: any\r\n}\r\n\r\ninterface ITomatoinputState {\r\n  description: string,\r\n  duration: number\r\n}\r\n\r\nclass Tomatoinput extends React.Component<ITomatoinputProps, ITomatoinputState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      description: '',\r\n      duration: 60 * 1000\r\n    }\r\n  }\r\n\r\n  addTomato = () => {\r\n    this.props.addTomato({ 'duration': this.state.duration })\r\n  }\r\n\r\n  updateTomato = async (params: any) => {\r\n    await axios.put(`tomatoes/${this.props.unfishedTomato.id}`, params)\r\n      .then(res => { this.props.updateTomato(res.data.resource) })\r\n      .catch(err => { throw new Error(err) })\r\n  }\r\n\r\n  abortTomato = () => {\r\n    this.updateTomato({ aborted: true })\r\n  }\r\n\r\n  addDescription = () => {\r\n    this.updateTomato({\r\n      'description': this.state.description,\r\n      'ended_at': new Date()\r\n    })\r\n    this.setState({ 'description': '' })\r\n  }\r\n\r\n  countDownFinish = () => {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  confirm = () => {\r\n    return (\r\n      <Popconfirm\r\n        title=\"你确定要终止这项任务吗？\"\r\n        onConfirm={this.abortTomato}\r\n        okText=\"是\"\r\n        cancelText=\"否\"\r\n      >\r\n        <CloseCircleOutlined style={{ position: 'absolute', right: '-5px', top: '-5px', background: '#fff' }} />\r\n      </Popconfirm>\r\n    )\r\n  }\r\n\r\n  showStartBtn = () => {\r\n    return <Button className=\"starttomatobtn\" onClick={this.addTomato}>开始番茄</Button>\r\n  }\r\n\r\n  showInputTomato = () => {\r\n    return (\r\n      <div className=\"inputwrapper\">\r\n        <Input placeholder=\"请输入你刚刚完成的任务\"\r\n          value={this.state.description}\r\n          onChange={e => this.setState({ description: e.target.value })}\r\n          onPressEnter={this.addDescription}\r\n        />\r\n        {this.confirm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showCountDown = (startedAt: number, duration: number, now: number) => {\r\n    return (\r\n      <div className=\"countdownwrapper\">\r\n        <Countdown timer={duration - now + startedAt} finish={this.countDownFinish} duration={this.state.duration} />\r\n        {this.confirm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showWhich = () => {\r\n    let html = <div />\r\n    if (this.props.unfishedTomato === undefined) {\r\n      html = this.showStartBtn()\r\n    } else {\r\n      const startedAt = Date.parse(this.props.unfishedTomato.started_at)\r\n      const duration = this.props.unfishedTomato.duration\r\n      const now = new Date().getTime()\r\n      html = now - startedAt > duration ?\r\n        this.showInputTomato() :\r\n        this.showCountDown(startedAt, duration, now)\r\n    }\r\n    return html\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"tomatoinput\">\r\n        {this.showWhich()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tomatoinput","import React from 'react'\r\nimport { format } from 'date-fns'\r\nimport './tomatolist.scss'\r\n\r\ninterface ITomatolistProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nclass Tomatolist extends React.Component<ITomatolistProps> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  get date() {\r\n    return Object.keys(this.props.finishedTomatoes)\r\n  }\r\n\r\n  tomatoItem = (tomato: any) => {\r\n    return (\r\n      <div className=\"tomatoitem\" key={tomato.id}>\r\n        <span className=\"time\">{format(Date.parse(tomato.started_at), 'HH:mm')} - {format(Date.parse(tomato.ended_at), 'HH:mm')}</span>\r\n        <span className=\"description\">{tomato.description}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  get tomatoesList() {\r\n    return this.date.map(date => {\r\n      const dailyTomatoes = this.props.finishedTomatoes[date]\r\n      return (\r\n        <div key={date} className='daliytomatoes'>\r\n          <div className=\"title\">\r\n            <span className=\"date\">{format(Date.parse(date), 'M月dd日')}</span>\r\n            <span className=\"finishedcount\">完成了{dailyTomatoes.length}个番茄时间</span>\r\n          </div>\r\n          <div className=\"details\">\r\n            {dailyTomatoes.map((ts: any) => this.tomatoItem(ts))}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tomatolist\" id='tomatolist'>\r\n        {this.tomatoesList}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tomatolist","import React from 'react'\r\nimport Tomatoinput from './tomatoinput'\r\nimport Tomatolist from './tomatolist'\r\nimport axios from '../../config/axios'\r\nimport { addTomato, updateTomato } from '../../redux/reducers/actions'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { format } from 'date-fns'\r\nimport './tomato.scss'\r\n\r\ninterface ITomatoProps {\r\n  addTomato: (payload: any) => void,\r\n  updateTomato: (patload: any) => void,\r\n  tomatoes: any[]\r\n}\r\n\r\nclass Tomato extends React.Component<ITomatoProps> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  addTomato = async (params: any) => {\r\n    await axios.post('/tomatoes', params)\r\n      .then(res => { this.props.addTomato(res.data.resource) })\r\n      .catch(err => { throw new Error(err) })\r\n  }\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter((t: any) => !t.description && !t.ended_at && !t.aborted)[0]\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    const finishedtomatoes = this.props.tomatoes.filter((t: any) => t.description && t.ended_at && !t.aborted)\r\n    const obj = _.groupBy(finishedtomatoes, tomato => format(Date.parse(tomato.started_at), 'yyyy/MM/dd'))\r\n    return obj\r\n  }\r\n\r\n  upDateTomato = (payload: any) => {\r\n    this.props.updateTomato(payload)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"tomato\">\r\n        <Tomatoinput addTomato={this.addTomato} unfishedTomato={this.unfinishedTomato} updateTomato={this.upDateTomato} />\r\n        <Tomatolist finishedTomatoes={this.finishedTomatoes} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomato)\r\n\r\n","import React from 'react'\r\n\r\ninterface IPolygonProps {\r\n  data: any,\r\n  finishedCount: number\r\n}\r\n\r\ninterface IPolygonState {\r\n  svgWidth: number\r\n}\r\n\r\nclass Polygon extends React.Component<IPolygonProps, IPolygonState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      svgWidth: 300\r\n    }\r\n  }\r\n\r\n  points = () => {\r\n    const { svgWidth } = this.state\r\n    const dates = Object.keys(this.props.data).sort((a, b) => {\r\n      return Date.parse(a) - Date.parse(b)\r\n    })\r\n    const firstDay = dates[0]\r\n    if (!firstDay) return `0,60 ${svgWidth},60`\r\n    const lastDay = dates[dates.length - 1]\r\n    const range = Date.parse(lastDay) - Date.parse(firstDay)\r\n    let finishedCount = 0\r\n    const pointslist = dates.map(d => {\r\n      const x = (Date.parse(d) - Date.parse(firstDay)) / range * svgWidth\r\n      finishedCount += this.props.data[d].length\r\n      const y = (1 - finishedCount / this.props.finishedCount) * 60\r\n      return `${x},${y}`\r\n    })\r\n    return ['0,60', ...pointslist, `${svgWidth},60`].join(' ')\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"polygon\">\r\n        <svg height={60} >\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" points={this.points()} />\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Polygon","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { format } from 'date-fns'\r\nimport './statistics.scss'\r\nimport Polygon from './polygon'\r\nimport { Progress } from 'antd';\r\n\r\nclass Statistics extends React.Component<any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter((t: any) => t.completed && !t.deleted)\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    return this.props.tomatoes.filter((t: any) => !t.aborted && t.ended_at)\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, todos => {\r\n      return format(Date.parse(todos.updated_at), 'yyyy/MM/dd')\r\n    })\r\n  }\r\n\r\n  get dailyTomatoes() {\r\n    return _.groupBy(this.finishedTomatoes, tomato => {\r\n      return format(Date.parse(tomato.ended_at), 'yyyy/MM/dd')\r\n    })\r\n  }\r\n\r\n  getTodayTomatoesCount = () => {\r\n    const tomatoesdates = Object.keys(this.dailyTomatoes)\r\n    const today = format(new Date(), 'yyyy/MM/dd')\r\n    return today !== tomatoesdates[0] ?\r\n      0 :\r\n      this.dailyTomatoes[tomatoesdates[0]] && this.dailyTomatoes[tomatoesdates[0]].length\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id='statistics'>\r\n        <ul>\r\n          <li>\r\n            <div className='title'>目标</div>\r\n            <div className='description'>今日目标</div>\r\n            <div className='progress'>\r\n              <span className='progress-text'>{this.getTodayTomatoesCount()}/8</span>\r\n              <Progress className='progress-img'\r\n                type=\"circle\"\r\n                percent={this.getTodayTomatoesCount() / 8 * 100}\r\n                width={85}\r\n                strokeColor='rgba(215,78,78,0.5)' />\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className='history'>\r\n              <div>\r\n                <div>番茄历史</div>\r\n                <div className='description'>累计完成个任务</div>\r\n              </div>\r\n              <span className='count'>{this.finishedTomatoes.length}</span>\r\n            </div>\r\n            <Polygon data={this.dailyTomatoes} finishedCount={this.finishedTomatoes.length} />\r\n          </li>\r\n          <li>\r\n            <div className='history'>\r\n              <div>\r\n                <div>任务历史</div>\r\n                <div className='description'>累计完成个任务</div>\r\n              </div>\r\n              <span className='count'>{this.finishedTodos.length}</span>\r\n            </div>\r\n            <Polygon data={this.dailyTodos} finishedCount={this.finishedTodos.length} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(Statistics)","import React from 'react'\r\nimport './history.scss'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { format } from 'date-fns'\r\n\r\ninterface IHistoryProps {\r\n  todos: any[]\r\n}\r\n\r\nclass History extends React.Component<IHistoryProps> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter((t: any) => t.completed && !t.deleted)\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter((t: any) => t.deleted)\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return format(Date.parse(todo.updated_at), \"yyyy/MM/dd\")\r\n    })\r\n  }\r\n\r\n  get dates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n  }\r\n\r\n  render() {\r\n    const todoList = this.dates.map((date: any) => {\r\n      return (\r\n        <div>\r\n          <div>{date}</div>\r\n          完成了{this.dailyFinishedTodos[date].length}个任务\r\n        </div>\r\n      )\r\n    })\r\n    return (\r\n      <div id=\"history\">\r\n        {todoList}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(History)\r\n","import * as React from 'react'\r\nimport axios from '../../config/axios'\r\nimport { Menu, Dropdown } from 'antd'\r\nimport { DownOutlined, LoginOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport history from '../../config/history'\r\nimport IconFont from '../../iconfont/iconfont'\r\nimport Todo from '../todo/todo'\r\nimport { connect } from 'react-redux'\r\nimport { initTodos, initTomatoes } from '../../redux/reducers/actions'\r\nimport Tomato from '../tomato/tomato'\r\nimport './index.scss'\r\nimport Statistics from '../statistics/statistics';\r\nimport History from '../history/history'\r\n\r\ninterface IIndexProps {\r\n  history: any,\r\n  initTodos: (params: any[]) => {},\r\n  initTomatoes: (params: any[]) => {}\r\n}\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '')\r\n  history.push('/login')\r\n}\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <span><SettingOutlined />个人设置</span>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <span onClick={logout}><LoginOutlined />注销</span>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass Index extends React.Component<IIndexProps, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      user: {}\r\n    }\r\n  }\r\n  getMe = async () => {\r\n    await axios.get('/me').then(res => { this.setState({ user: res.data }) })\r\n  }\r\n\r\n  getTodo = async () => {\r\n    await axios.get('todos')\r\n      .then(res => {\r\n        const todos = res.data.resources.map((t: any) => {\r\n          return Object.assign({}, t, { editing: false })\r\n        })\r\n        this.props.initTodos(todos)\r\n      })\r\n      .catch(e => { throw new Error(e) })\r\n  }\r\n\r\n  getTomatoes = async () => {\r\n    await axios.get('tomatoes')\r\n      .then(res => {\r\n        this.props.initTomatoes(res.data.resources)\r\n      })\r\n      .catch(e => { throw new Error(e) })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMe()\r\n    this.getTodo()\r\n    this.getTomatoes()\r\n  }\r\n  render() {\r\n    return (\r\n      <div id='index'>\r\n        <header>\r\n          <span className=\"logo-wraper\">\r\n            <IconFont type='icon-time' className=\"logo\" />\r\n            <span className='logo-text'>Tomato-Potato</span>\r\n          </span>\r\n          <Dropdown overlay={menu}>\r\n            <span className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n              {this.state.user.account} <DownOutlined />\r\n            </span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Tomato />\r\n          <Todo />\r\n        </main>\r\n        <Statistics />\r\n        <History />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)\r\n","import * as React from 'react'\r\nimport axios from '../../config/axios'\r\nimport { Input, Button } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport './signup.scss'\r\n\r\ninterface ISignupState {\r\n  account: string,\r\n  password: string,\r\n  password_confirmation: string\r\n}\r\n\r\ninterface ISignupProps {\r\n  history: any\r\n}\r\n\r\nclass Signup extends React.Component<ISignupProps, ISignupState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      password_confirmation: ''\r\n    }\r\n  }\r\n\r\n  inputOnChange = (item: keyof ISignupState, value: string) => {\r\n    const newState: any = {}\r\n    newState[item] = value\r\n    this.setState(newState)\r\n\r\n  }\r\n\r\n  submit = async () => {\r\n    const { account, password, password_confirmation } = this.state\r\n    await axios.post('sign_up/user', {\r\n      account,\r\n      password,\r\n      password_confirmation\r\n    })\r\n      .then(() => { this.props.history.push('index') })\r\n      .catch(err => { throw new Error(err) })\r\n  }\r\n\r\n  render() {\r\n    const { account, password, password_confirmation } = this.state\r\n    return (\r\n      <div className=\"signup\" id=\"signup\">\r\n        <h1>注 册</h1>\r\n        <Input\r\n          placeholder=\"请输入用户名字\"\r\n          prefix={<UserOutlined />}\r\n          value={account}\r\n          onChange={e => { this.inputOnChange('account', e.target.value) }}\r\n        />\r\n        <Input.Password\r\n          placeholder=\"请输入密码\"\r\n          value={password}\r\n          onChange={e => { this.inputOnChange('password', e.target.value) }}\r\n        />\r\n        <Input.Password\r\n          placeholder=\"请重复密码\"\r\n          value={password_confirmation}\r\n          onChange={e => { this.inputOnChange('password_confirmation', e.target.value) }}\r\n        />\r\n        <Button className=\"signup-btn\" type=\"primary\" onClick={this.submit} >注 册</Button>\r\n        <p>如果已有账号，请 <Link to='/login'>登陆</Link></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Signup","import * as React from 'react'\r\nimport axios from '../../config/axios'\r\nimport { Input, Button } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport './login.scss'\r\n\r\ninterface ISignupState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\ninterface ISignupProps {\r\n  history: any\r\n}\r\n\r\nclass Login extends React.Component<ISignupProps, ISignupState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    }\r\n  }\r\n\r\n  inputOnChange = (item: keyof ISignupState, value: string) => {\r\n    const newState: any = {}\r\n    newState[item] = value\r\n    this.setState(newState)\r\n\r\n  }\r\n\r\n  submit = async () => {\r\n    const { account, password } = this.state\r\n    await axios.post('sign_in/user', {\r\n      account,\r\n      password,\r\n    })\r\n      .then((res) => { this.props.history.push('index') })\r\n      .catch(err => { throw new Error(err) })\r\n  }\r\n\r\n  render() {\r\n    const { account, password } = this.state\r\n    return (\r\n      <div className=\"login\" id=\"login\">\r\n        <h1>登 陆</h1>\r\n        <Input\r\n          placeholder=\"请输入用户名字\"\r\n          prefix={<UserOutlined />}\r\n          value={account}\r\n          onChange={e => { this.inputOnChange('account', e.target.value) }}\r\n        />\r\n        <Input.Password\r\n          placeholder=\"请输入密码\"\r\n          value={password}\r\n          onChange={e => { this.inputOnChange('password', e.target.value) }}\r\n        />\r\n        <Button type=\"primary\" className=\"login-btn\" onClick={this.submit} >登 陆</Button>\r\n        <p>如果没有账号，请 <Link to='/signup'>注册</Link></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport tomatoes from './tomatoes'\r\n\r\nexport default combineReducers({ todos, tomatoes })","import { ADD_TODO, UPDATE_TODO, EDIT_TODO, INIT_TODOS } from '../actiontypes'\r\n\r\nexport default (state: any[], action: any) => {\r\n  state = state || [];\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [action.payload, ...state]\r\n    case INIT_TODOS:\r\n      return [...action.payload]\r\n    case UPDATE_TODO:\r\n      return state.map(t => t.id === action.payload.id ? action.payload : t)\r\n    case EDIT_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, { 'editing': true })\r\n        } else {\r\n          return Object.assign({}, t, { 'editing': false })\r\n        }\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from '../actiontypes'\r\n\r\nexport default (state: any[], action: any) => {\r\n  state = state || [];\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state]\r\n    case INIT_TOMATOES:\r\n      return [...action.payload]\r\n    case UPDATE_TOMATO:\r\n      return state.map(t => t.id === action.payload.id ? action.payload : t)\r\n    default:\r\n      return state\r\n  }\r\n}","import { createStore } from 'redux'\r\nimport rootreducer from './reducers/index'\r\n\r\nconst store = createStore(rootreducer)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport history from './config/history'\n\nimport {\n  Router,\n  Route\n} from \"react-router-dom\";\nimport Index from './component/index';\nimport Signup from './component/signup/signup';\nimport Login from './component/login/login';\n\nexport default function App() {\n  return (\n    <Router history={history}>\n      <div>\n        <Route path=\"/index\" component={Index} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/login\" component={Login} />\n      </div>\n    </Router>\n  );\n}\n\n"],"sourceRoot":""}